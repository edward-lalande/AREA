definitions:
  models.DiscordGet:
    properties:
      routes:
        type: string
    type: object
  models.DiscordPost:
    properties:
      code:
        type: string
      routes:
        type: string
      token:
        type: string
    type: object
  models.Login:
    properties:
      mail:
        type: string
      password:
        type: string
    type: object
  models.OauthCode:
    properties:
      code:
        type: string
    type: object
  models.PayloadItem:
    type: object
  models.SignUp:
    properties:
      lastname:
        type: string
      mail:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  routes.serviceList:
    properties:
      call_to_api_gateway:
        type: string
      color:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
info:
  contact: {}
paths:
  /actions:
    get:
      consumes:
      - application/json
      description: Get actions from all services
      produces:
      - application/json
      responses:
        "200":
          description: Actions name with parameters of it as object
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get actions from all services
      tags:
      - Area api-gateway
  /areas:
    get:
      consumes:
      - application/json
      description: Get area from a users in all servieces by sending an array of object
        of area
      produces:
      - application/json
      responses:
        "200":
          description: Reactions name with parameters of it as object
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Requests
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get area from a users in all servieces by sending an array of object
        of area
      tags:
      - Area api-gateway
    post:
      consumes:
      - application/json
      description: Create a new combination of action and reaction (Area) for a users
      parameters:
      - description: Data for all actions-reactions
        in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/models.PayloadItem'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Response of all Services with the details of the executions
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new actions-reactions or actions-multiple reactions
      tags:
      - Area api-gateway
  /asana/access-token:
    post:
      consumes:
      - application/json
      description: Receives an OAuth2 authorization code and exchanges it for an access
        token with Asana.
      parameters:
      - description: OAuth2 Authorization Code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OauthCode'
      produces:
      - application/json
      responses:
        "200":
          description: Access token response
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exchange Asana OAuth2 authorization code for an access token
      tags:
      - Asana
  /asana/oauth:
    get:
      description: Initiates the OAuth2 process by redirecting the user to the Asana
        authorization endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to Asana OAuth2 authorization endpoint
      tags:
      - Asana
  /discord:
    get:
      consumes:
      - application/json
      description: Get data from discord like ping, access-token...
      parameters:
      - description: routes you would like to access to Discord
        in: body
        name: routes
        required: true
        schema:
          $ref: '#/definitions/models.DiscordGet'
      produces:
      - application/json
      responses:
        "200":
          description: Response of Discord
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Data from discord services
      tags:
      - Discord api-gateway
    post:
      consumes:
      - application/json
      description: Post data to discord for oauth
      parameters:
      - description: routes you would like to access to Discord, code of the user
          and token of him if already exists
        in: body
        name: routes
        required: true
        schema:
          $ref: '#/definitions/models.DiscordPost'
      produces:
      - application/json
      responses:
        "200":
          description: Response of Discord
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Post Data to discord services
      tags:
      - Discord api-gateway
  /discord/access-token:
    post:
      consumes:
      - application/json
      description: Receives an OAuth2 authorization code and exchanges it for an access
        token with Discord.
      parameters:
      - description: OAuth2 Authorization Code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OauthCode'
      produces:
      - application/json
      responses:
        "200":
          description: Access token response
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exchange Discord OAuth2 authorization code for an access token
      tags:
      - Discord
  /discord/oauth:
    get:
      description: Initiates the OAuth2 process by redirecting the user to the Discord
        authorization endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to Discord OAuth2 authorization endpoint
      tags:
      - Discord
  /dropbox/access-token:
    post:
      consumes:
      - application/json
      description: Receives an OAuth2 authorization code and exchanges it for an access
        token with Dropbox.
      parameters:
      - description: OAuth2 Authorization Code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OauthCode'
      produces:
      - application/json
      responses:
        "200":
          description: Access token response
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exchange Dropbox OAuth2 authorization code for an access token
      tags:
      - Dropbox
  /dropbox/oauth:
    get:
      description: Initiates the OAuth2 process by redirecting the user to the Dropbox
        authorization endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to Dropbox OAuth2 authorization endpoint
      tags:
      - Dropbox
  /github-webhook:
    post:
      consumes:
      - application/json
      description: Receives JSON payloads from Github webhook and forwards them to
        the specified internal service.
      parameters:
      - description: Github Webhook Payload
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Webhook forwarded successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid JSON
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Handle Github webhook events
      tags:
      - Github
  /github/access-token:
    post:
      consumes:
      - application/json
      description: Receives an OAuth2 authorization code and exchanges it for an access
        token with Github.
      parameters:
      - description: OAuth2 Authorization Code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OauthCode'
      produces:
      - application/json
      responses:
        "200":
          description: Access token response
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exchange Github OAuth2 authorization code for an access token
      tags:
      - Github
  /github/oauth:
    get:
      description: Initiates the OAuth2 process by redirecting the user to the Github
        authorization endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to Github OAuth2 authorization endpoint
      tags:
      - Github
  /gitlab-webhook:
    post:
      consumes:
      - application/json
      description: Receives JSON payloads from GitLab webhook and forwards them to
        the specified internal service.
      parameters:
      - description: GitLab Webhook Payload
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Webhook forwarded successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid JSON
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Handle GitLab webhook events
      tags:
      - GitLab
  /gitlab/access-token:
    post:
      consumes:
      - application/json
      description: Receives an OAuth2 authorization code and exchanges it for an access
        token with Gitlab.
      parameters:
      - description: OAuth2 Authorization Code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OauthCode'
      produces:
      - application/json
      responses:
        "200":
          description: Access token response
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exchange Gitlab OAuth2 authorization code for an access token
      tags:
      - Gitlab
  /gitlab/oauth:
    get:
      description: Initiates the OAuth2 process by redirecting the user to the Gitlab
        authorization endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to Gitlab OAuth2 authorization endpoint
      tags:
      - Gitlab
  /google/access-token:
    post:
      consumes:
      - application/json
      description: Receives an OAuth2 authorization code and exchanges it for an access
        token with Google.
      parameters:
      - description: OAuth2 Authorization Code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OauthCode'
      produces:
      - application/json
      responses:
        "200":
          description: Access token response
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exchange Google OAuth2 authorization code for an access token
      tags:
      - Google
  /google/oauth:
    get:
      description: Initiates the OAuth2 process by redirecting the user to the Google
        authorization endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to Google OAuth2 authorization endpoint
      tags:
      - Google
  /login:
    post:
      consumes:
      - application/json
      description: Login a user to the user services database
      parameters:
      - description: user information to login
        in: body
        name: Object
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: User Token
          schema:
            type: string
        "400":
          description: Bad requests
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - User api-gateway
  /reactions:
    get:
      consumes:
      - application/json
      description: Get reactions from all services
      produces:
      - application/json
      responses:
        "200":
          description: Reactions name with parameters of it as object
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get reactions from all services
      tags:
      - Area api-gateway
  /services:
    get:
      consumes:
      - application/json
      description: Get services up with name to display, routes to call it to the
        api-gateway, url and color to display
      produces:
      - application/json
      responses:
        "200":
          description: services up with name to display, routes to call it to the
            api-gateway, url and color to display
          schema:
            $ref: '#/definitions/routes.serviceList'
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all services up
      tags:
      - Area api-gateway
  /sign-up:
    post:
      consumes:
      - application/json
      description: Sign up a user to the user services database
      parameters:
      - description: user information to sign-up
        in: body
        name: Object
        required: true
        schema:
          $ref: '#/definitions/models.SignUp'
      produces:
      - application/json
      responses:
        "200":
          description: User Token
          schema:
            type: string
        "400":
          description: Bad requests
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sign up a user
      tags:
      - User api-gateway
  /spotify/access-token:
    post:
      consumes:
      - application/json
      description: Receives an OAuth2 authorization code and exchanges it for an access
        token with Spotify.
      parameters:
      - description: OAuth2 Authorization Code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.OauthCode'
      produces:
      - application/json
      responses:
        "200":
          description: Access token response
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exchange Spotify OAuth2 authorization code for an access token
      tags:
      - Spotify
  /spotify/oauth:
    get:
      description: Initiates the OAuth2 process by redirecting the user to the Spotify
        authorization endpoint.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect to Spotify OAuth2 authorization endpoint
      tags:
      - Spotify
  /update-user:
    post:
      consumes:
      - application/json
      description: Update a user to the user services database
      parameters:
      - description: user information to update
        in: body
        name: Object
        required: true
        schema:
          $ref: '#/definitions/models.SignUp'
      produces:
      - application/json
      responses:
        "200":
          description: User Token
          schema:
            type: string
        "400":
          description: Bad requests
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
      tags:
      - User api-gateway
swagger: "2.0"
