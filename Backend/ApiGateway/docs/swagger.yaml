definitions:
  models.DiscordGet:
    properties:
      routes:
        type: string
    type: object
  models.DiscordPost:
    properties:
      code:
        type: string
      routes:
        type: string
      token:
        type: string
    type: object
  models.PayloadItem:
    type: object
  models.UserInformation:
    properties:
      id:
        type: integer
      lastname:
        type: string
      mail:
        type: string
      name:
        type: string
      password:
        type: string
      routes:
        type: string
    type: object
  models.UsersGet:
    properties:
      routes:
        type: string
    type: object
  routes.serviceList:
    properties:
      call_to_api_gateway:
        type: string
      color:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
info:
  contact: {}
paths:
  /actions:
    get:
      consumes:
      - application/json
      description: Get actions from all services
      produces:
      - application/json
      responses:
        "200":
          description: Actions name with parameters of it as object
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get actions from all services
      tags:
      - Area api-gateway
  /area:
    post:
      consumes:
      - application/json
      description: Create a new combination of action and reaction (Area) for a users
      parameters:
      - description: Data for all actions-reactions
        in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/models.PayloadItem'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Response of all Services with the details of the executions
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new actions-reactions or actions-multiple reactions
      tags:
      - Area api-gateway
  /discord:
    get:
      consumes:
      - application/json
      description: Get data from discord like ping, access-token...
      parameters:
      - description: routes you would like to access to Discord
        in: body
        name: routes
        required: true
        schema:
          $ref: '#/definitions/models.DiscordGet'
      produces:
      - application/json
      responses:
        "200":
          description: Response of Discord
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Data from discord services
      tags:
      - Discord api-gateway
    post:
      consumes:
      - application/json
      description: Post data to discord for oauth
      parameters:
      - description: routes you would like to access to Discord, code of the user
          and token of him if already exists
        in: body
        name: routes
        required: true
        schema:
          $ref: '#/definitions/models.DiscordPost'
      produces:
      - application/json
      responses:
        "200":
          description: Response of Discord
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Post Data to discord services
      tags:
      - Discord api-gateway
  /reactions:
    get:
      consumes:
      - application/json
      description: Get reactions from all services
      produces:
      - application/json
      responses:
        "200":
          description: Reactions name with parameters of it as object
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get reactions from all services
      tags:
      - Area api-gateway
  /services:
    get:
      consumes:
      - application/json
      description: Get services up with name to display, routes to call it to the
        api-gateway, url and color to display
      produces:
      - application/json
      responses:
        "200":
          description: services up with name to display, routes to call it to the
            api-gateway, url and color to display
          schema:
            $ref: '#/definitions/routes.serviceList'
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all services up
      tags:
      - Area api-gateway
  /user:
    get:
      consumes:
      - application/json
      description: Routes get user services
      parameters:
      - description: routes wanted to the user services
        in: body
        name: Object
        required: true
        schema:
          $ref: '#/definitions/models.UsersGet'
      produces:
      - application/json
      responses:
        "200":
          description: User services responses
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get to the user services
      tags:
      - User api-gateway
    post:
      consumes:
      - application/json
      description: Routes to add a new user to the database
      parameters:
      - description: user information to login or sign-up
        in: body
        name: Object
        required: true
        schema:
          $ref: '#/definitions/models.UserInformation'
      produces:
      - application/json
      responses:
        "200":
          description: User Token
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Post a new users to the user database without OAUTH2 or login
      tags:
      - User api-gateway
swagger: "2.0"
