// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actions": {
            "get": {
                "description": "Get actions from all services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area api-gateway"
                ],
                "summary": "Get actions from all services",
                "responses": {
                    "200": {
                        "description": "Actions name with parameters of it as object",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/areas": {
            "get": {
                "description": "Get area from a users in all servieces by sending an array of object of area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area api-gateway"
                ],
                "summary": "Get area from a users in all servieces by sending an array of object of area",
                "responses": {
                    "200": {
                        "description": "Reactions name with parameters of it as object",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new combination of action and reaction (Area) for a users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area api-gateway"
                ],
                "summary": "Create a new actions-reactions or actions-multiple reactions",
                "parameters": [
                    {
                        "description": "Data for all actions-reactions",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PayloadItem"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of all Services with the details of the executions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/asana/access-token": {
            "post": {
                "description": "Receives an OAuth2 authorization code and exchanges it for an access token with Asana.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asana"
                ],
                "summary": "Exchange Asana OAuth2 authorization code for an access token",
                "parameters": [
                    {
                        "description": "OAuth2 Authorization Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OauthCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/asana/oauth": {
            "get": {
                "description": "Initiates the OAuth2 process by redirecting the user to the Asana authorization endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asana"
                ],
                "summary": "Redirect to Asana OAuth2 authorization endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/discord": {
            "get": {
                "description": "Get data from discord like ping, access-token...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discord api-gateway"
                ],
                "summary": "Get Data from discord services",
                "parameters": [
                    {
                        "description": "routes you would like to access to Discord",
                        "name": "routes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DiscordGet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of Discord",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Post data to discord for oauth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discord api-gateway"
                ],
                "summary": "Post Data to discord services",
                "parameters": [
                    {
                        "description": "routes you would like to access to Discord, code of the user and token of him if already exists",
                        "name": "routes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DiscordPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of Discord",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/discord/access-token": {
            "post": {
                "description": "Receives an OAuth2 authorization code and exchanges it for an access token with Discord.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discord"
                ],
                "summary": "Exchange Discord OAuth2 authorization code for an access token",
                "parameters": [
                    {
                        "description": "OAuth2 Authorization Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OauthCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/discord/oauth": {
            "get": {
                "description": "Initiates the OAuth2 process by redirecting the user to the Discord authorization endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discord"
                ],
                "summary": "Redirect to Discord OAuth2 authorization endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dropbox/access-token": {
            "post": {
                "description": "Receives an OAuth2 authorization code and exchanges it for an access token with Dropbox.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dropbox"
                ],
                "summary": "Exchange Dropbox OAuth2 authorization code for an access token",
                "parameters": [
                    {
                        "description": "OAuth2 Authorization Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OauthCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dropbox/oauth": {
            "get": {
                "description": "Initiates the OAuth2 process by redirecting the user to the Dropbox authorization endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dropbox"
                ],
                "summary": "Redirect to Dropbox OAuth2 authorization endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/github-webhook": {
            "post": {
                "description": "Receives JSON payloads from Github webhook and forwards them to the specified internal service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Handle Github webhook events",
                "parameters": [
                    {
                        "description": "Github Webhook Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook forwarded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/github/access-token": {
            "post": {
                "description": "Receives an OAuth2 authorization code and exchanges it for an access token with Github.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Exchange Github OAuth2 authorization code for an access token",
                "parameters": [
                    {
                        "description": "OAuth2 Authorization Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OauthCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/github/oauth": {
            "get": {
                "description": "Initiates the OAuth2 process by redirecting the user to the Github authorization endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Redirect to Github OAuth2 authorization endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gitlab-webhook": {
            "post": {
                "description": "Receives JSON payloads from GitLab webhook and forwards them to the specified internal service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GitLab"
                ],
                "summary": "Handle GitLab webhook events",
                "parameters": [
                    {
                        "description": "GitLab Webhook Payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook forwarded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gitlab/access-token": {
            "post": {
                "description": "Receives an OAuth2 authorization code and exchanges it for an access token with Gitlab.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gitlab"
                ],
                "summary": "Exchange Gitlab OAuth2 authorization code for an access token",
                "parameters": [
                    {
                        "description": "OAuth2 Authorization Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OauthCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gitlab/oauth": {
            "get": {
                "description": "Initiates the OAuth2 process by redirecting the user to the Gitlab authorization endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gitlab"
                ],
                "summary": "Redirect to Gitlab OAuth2 authorization endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/google/access-token": {
            "post": {
                "description": "Receives an OAuth2 authorization code and exchanges it for an access token with Google.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Google"
                ],
                "summary": "Exchange Google OAuth2 authorization code for an access token",
                "parameters": [
                    {
                        "description": "OAuth2 Authorization Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OauthCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/google/oauth": {
            "get": {
                "description": "Initiates the OAuth2 process by redirecting the user to the Google authorization endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Google"
                ],
                "summary": "Redirect to Google OAuth2 authorization endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login a user to the user services database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User api-gateway"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "user information to login",
                        "name": "Object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reactions": {
            "get": {
                "description": "Get reactions from all services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area api-gateway"
                ],
                "summary": "Get reactions from all services",
                "responses": {
                    "200": {
                        "description": "Reactions name with parameters of it as object",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "description": "Get services up with name to display, routes to call it to the api-gateway, url and color to display",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area api-gateway"
                ],
                "summary": "Get all services up",
                "responses": {
                    "200": {
                        "description": "services up with name to display, routes to call it to the api-gateway, url and color to display",
                        "schema": {
                            "$ref": "#/definitions/routes.serviceList"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sign-up": {
            "post": {
                "description": "Sign up a user to the user services database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User api-gateway"
                ],
                "summary": "Sign up a user",
                "parameters": [
                    {
                        "description": "user information to sign-up",
                        "name": "Object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/spotify/access-token": {
            "post": {
                "description": "Receives an OAuth2 authorization code and exchanges it for an access token with Spotify.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spotify"
                ],
                "summary": "Exchange Spotify OAuth2 authorization code for an access token",
                "parameters": [
                    {
                        "description": "OAuth2 Authorization Code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OauthCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/spotify/oauth": {
            "get": {
                "description": "Initiates the OAuth2 process by redirecting the user to the Spotify authorization endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spotify"
                ],
                "summary": "Redirect to Spotify OAuth2 authorization endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/update-user": {
            "post": {
                "description": "Update a user to the user services database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User api-gateway"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "user information to update",
                        "name": "Object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.DiscordGet": {
            "type": "object",
            "properties": {
                "routes": {
                    "type": "string"
                }
            }
        },
        "models.DiscordPost": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "routes": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "mail": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.OauthCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "models.PayloadItem": {
            "type": "object"
        },
        "models.SignUp": {
            "type": "object",
            "properties": {
                "lastname": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "routes.serviceList": {
            "type": "object",
            "properties": {
                "call_to_api_gateway": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
