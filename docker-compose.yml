version: '3'

services:

  frontend:
    build: Frontend
    container_name: frontend
    environment:
      PORT: 3000
    ports:
      - 3000:3000

  api-gateway:
    build: Backend/ApiGateway
    container_name: api-gateway
    environment:
      PORT: 8080
      USER_API: http://user-services:8081/
      TIME_API: http://time-services:8082/
    ports:
      - 8080:8080

  user-services:
    build: Backend/Services/UserServices
    container_name: user-services
    environment: 
      PORT: 8081
      API_GATEWAY: http://api-gateway:8080/
      DB: postgresql://root:password@user-services-db:5432/user
      SECRET_KEY: PET
    ports:
      - 8081:8081
    depends_on:
      - user-services-db

  user-services-db:
    image: postgres:alpine
    container_name: user-services-db
    restart: always
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./Backend/Services/UserServices/database/user.sql:/docker-entrypoint-initdb.d/init.sql

  time-services:
    build: Backend/Services/DateTimeServices
    container_name: time-services
    environment:
      PORT: 8082
      API_GATEWAY: http://api-gateway:8080/
      DATE_TIME_API: http://worldtimeapi.org/api/timezone/Etc/UTC
      DB: postgresql://root:password@user-services-db:5432/user
    ports:
      - 8082:8082
    depends_on:
      - user-services-db

  time-services-db:
    image: postgres:alpine
    container_name: time-services-db
    restart: always
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    ports:
      - 5433:5432
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./Backend/Services/DateTimeServices/database/time.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  user-db-data:
